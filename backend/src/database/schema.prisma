generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ONLINE
  OFFLINE
  AWAY
  BUSY
}

model User {
  id          String       @id @default(uuid())
  login    	  String       @unique
  displayName String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  friendships Friendship[] @relation("FriendshipUser")
  profile     UserProfile?
}

model Friend {
  id          String       @id @default(uuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  friendships Friendship[] @relation("FriendshipFriend")
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  DECLINED
  BLOCKED
}

model Friendship {
  id       String           @id @default(uuid())
  user     User             @relation("FriendshipUser", fields: [userId], references: [id])
  friend   Friend           @relation("FriendshipFriend", fields: [friendId], references: [id])
  userId   String
  friendId String
  status   FriendshipStatus

  @@unique([userId, friendId])
}

model UserProfile {
  id     String     @id @default(uuid())
  user   User       @relation(fields: [userId], references: [id])
  userId String     @unique
  bio    String?
  avatar String?
  status UserStatus
}

model Message {
  id        String   @id @default(uuid())
  authorId  String
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  content   String
}

enum chatType {
  PUBLIC
  PRIVATE
  PROTECTED
}

model Chat {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  users     String[]
  chatType  chatType
  password  String?
}

model Game {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  scoreTable ScoreTable?
}

model ScoreTable {
  id         String @id @default(uuid())
  game       Game   @relation(fields: [gameId], references: [id])
  gameId     String @unique
  userId     String
  otherId    String
  userScore  Int
  otherScore Int
}
