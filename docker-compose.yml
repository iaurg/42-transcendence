services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      # Only build the api for the development environment
      target: development
    volumes:
      - ./backend:/usr/src/app
      - avatars:/usr/src/app/uploads
    env_file:
      - ./.env
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?schema=public"
    command: npm run start:dev
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ~/$USER/transcendence-postgres:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  dbadmin:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # Only build the api for the development environment
      target: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8000:3000"
    restart: always
    environment:
      NODE_ENV: development
    networks:
      - backend

volumes:
  transcendence-postgres:
  avatars:
networks:
  backend:
    driver: bridge
