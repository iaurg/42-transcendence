services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - avatars:/usr/src/app/uploads
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - transcendence

  database:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/data/postgres
    networks:
      - transcendence
    env_file:
      - ./.env
    environment:
      PGDATA: /data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    restart: unless-stopped
    env_file:
      - ./frontend/.env
    environment:
      NODE_ENV: production
    networks:
      - transcendence

volumes:
  postgres-data:
  avatars:
networks:
  transcendence:
    driver: bridge
